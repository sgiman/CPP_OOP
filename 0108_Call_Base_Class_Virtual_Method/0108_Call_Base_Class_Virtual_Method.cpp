// **********************************************************************************************************
// c++ вызов виртуального метода базового класса. ООП. | Изучение с++ с нуля. | Для начинающих. | Урок #108
// ----------------------------------------------------------------------------------------------------------
// С++ | Visual Studio 2022
// ----------------------------------------------------------------------------------------------------------
// Журавлёв Сергей | #SimpleCode | Udemy
// https://www.udemy.com/user/zhuravliov-sergei/
// 2019-2023 @ sgiman
// **********************************************************************************************************

#include <iostream>
#include <string>
#include "utils.h"

using namespace std;

/*--------------------------------
*  вызов метода базового класса
*--------------------------------*/

class Msg								// базовый класс "Msg" (принять сообщение)
{
public:
	Msg(string msg)
	{
		this->msg = msg;
	}

	virtual string GetMsg()				// GetMsg() - метод базового класса 
	{
		return msg;
	}

private:
	string msg;
};


class BraketsMsg : public Msg				// класс для добавления скобок - наследование базового класса "Msg"
{
public:

	BraketsMsg(string msg) : Msg(msg)		// конcтурктор с наследованием из базового класса "Msg"
	{
	}

	string GetMsg() override				// переопределить виртуальный метод GetMsg() в базовом классе "Msg" 
	{
		return "[" + Msg::GetMsg() + "]";	// вызвать метод "GetMsg" базого класса (иначе возникает рекурсия) - "::Msg::GetMsg()"
	}
};


class Printer								// класс "Printer" для вывода сообщения
{
public:
	void Print(Msg* msg)					// метод "Print" длz ввывода сообщения
	{
		cout << msg->GetMsg() << endl;		// вывод строки из метода "GetMsg()"
	}
};


/***********************
		  MAIN
************************/
int main(int argc, char* argv[])
{
	setlocale(LC_ALL, "ru");

	cout << "\n____________________________________________________________\n" << endl;
	BraketsMsg m("Привет!");
	Printer p;
	p.Print(&m);
	cout << "\n____________________________________________________________\n" << endl;

	//=== END ===
	cout << endl;
	MyDate();
	system("pause");
	return 0;

}