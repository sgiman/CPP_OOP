// Что такое агрегация и композиция. Отношения между классами и объектами. ООП. C++ Для начинающих | Уроки C++ #97  
// -----------------------------------------------------------------------------------------------------------------
// С++ | Visual Studio 2022 
// -----------------------------------------------------------------------------------------------------------------
// Журавлёв Сергей | #SimpleCode | Udemy
// https://www.udemy.com/user/zhuravliov-sergei/
// 2019-2023 @ sgiman

#include <iostream>
#include <string>
#include "utils.h"

using namespace std;

/*-----------------------------------------------------------------------
 * агрегация и композиция
 * (вложенные внутренние классы)
 *
 * агрегация - Inner Class используются в других классах
 *
 * композиция - Inner Class используются только в конкретном
 * классе как дополнение (более строгий случай)
 *------------------------------------------------------------------------*/

 // А Г Р Е Г А Ц И Я

class Cap				// класс "Кепка" 
{
public:
	string GetColor()
	{
		return color;
	}

private:
	string color = "red";

};


class Model				// Класс "Манекен"
{
public:
	void InspectModel()
	{
		cout << "Model Кепка (агрегация) " << cap.GetColor() << " цвета" << endl;
	}

private:
	Cap cap;
};


// К О М П О З И Ц И Я

class Human
{
public:

	void Think()				// Метод "Думать"
	{
		brain.Think();			// Вызов объекта "brain" с методом "Think" для аналогичного метода в главном классе  ("делегирование")
	}

	void InspectTheCap()		// Проверить сойства кепки (цвет) 
	{
		cout << "Human кепка (композиция) " << cap.GetColor() << " цвета." << endl;
	}

private:

	class Brain			// класс "Мозг"
	{
	public:
		void Think()
		{
			cout << "Я думаю! (композиция) " << endl;
		}
	};

	Brain brain;		// внутренний класс
	Cap cap;			// внешний класс 

};


/***********************
		  MAIN
************************/
int main(int argc, char* argv[])
{
	setlocale(LC_ALL, "ru");

	cout << "\n____________________________________________________________\n" << endl;

	// К О М П О З И Ц И Я
	Human human;				// человек
	human.Think();				// думать
	human.InspectTheCap();		// кепка		

	// А Г Р Е Г А Ц И Я
	Model m;					// манекен
	m.InspectModel();			// кепка

	cout << "\n____________________________________________________________\n" << endl;

	//=== END ===
	cout << endl;
	MyDate();
	system("pause");
	return 0;
}