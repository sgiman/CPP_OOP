//***************************************************************************************************************
// Конструктор копирования. Что это. Пример. Когда вызывается Копирование объектов по умолчанию | Уроки C++ #82  
// --------------------------------------------------------------------------------------------------------------
// С++ | Visual Studio 2022 
// --------------------------------------------------------------------------------------------------------------
// Журавлёв Сергей | #SimpleCode | Udemy
// https://www.udemy.com/user/zhuravliov-sergei/
// 2019-2023 @ sgiman
//***************************************************************************************************************
#include <iostream>
#include <string>
#include "utils.h"

using namespace std;

/*----------------------------------------------------------
*	конструктор копирования
*
*   Конструктор запускается при созданни класса
*   Деструктор запускается при выходе из зоны видимости
*----------------------------------------------------------*/

class MyClass
{

public:
	int* data;							// указатель на дин. массив

	// Constructor
	MyClass(int size)
	{
		this->size = size;				// размер
		this->data = new int[size];		// дин. массив
		for (int i = 0; i < size; i++)	// заполнить
		{
			data[i] = i;
		}
		cout << "    Указатель дин.массива: " << data << "\n (1)Вызвался конструктор" << " THIS: " << this << endl;
	}


	// Конструктор копирования !!!
	// this - указатель на текущий объект
	MyClass(const MyClass& other)				  // ссылка на объект (адрес) 			
	{
		this->size = other.size;                  // копировать размер
		this->data = new int[other.size];         // копировать дин. массив
		for (int i = 0; i < other.size; i++)      // скопировать новый дин. массив
		{
			this->data[i] = other.data[i];
		}
		cout << "\n (2)Вызвался конструктор копирования!!!" << " THIS: " << this << endl;
	}


	// Destructor (не может принимать параметры и вызываться отдельно)
	~MyClass()
	{
		cout << " Объект: " << data << " Вызвался деструктор" << " THIS: " << this << endl;
		cout << endl;
		delete[] data; // очистить память от дин. массива
	}

private:
	int size;

};


void Foo(MyClass value)
{
	cout << "\n --> Вызвалась функция \"FOO\" " << endl;
}


MyClass Foo2()
{
	cout << "\n --> Вызвалась функция \"FOO_2\" " << endl;

	MyClass temp(2);

	return temp;
}


/***********************
	  === MAIN ===
************************/
int main(int argc, char* argv[])
{
	setlocale(LC_ALL, "ru");

	cout << "\n____________________________________________________________\n" << endl;

	//Foo2();

	MyClass a(10);			// Новый дин. массив

	MyClass b(a);			// Копирование объекта "a" в объект "b" с помощью конструктора копирования  

	//Foo(a);				// Передать копию объекта в функцию (встроенное побитове копиррвание)


	//=== END ===
	cout << endl;
	MyDate();
	system("pause");
	return 0;
}