// *****************************************************************************************************************
// Порядок вызова конструкторов при наследовании. Как вызываются конструкторы. ООП C++ Начинающим | Уроки C++ #100  
// -----------------------------------------------------------------------------------------------------------------
// С++ | Visual Studio 2022 
// -----------------------------------------------------------------------------------------------------------------
// Журавлёв Сергей | #SimpleCode | Udemy
// https://www.udemy.com/user/zhuravliov-sergei//
// 2019-2023 @ sgiman
// *****************************************************************************************************************

#include <iostream>
#include <string>
#include "utils.h"

using namespace std;

/*-----------------------------------------------------------------------
*	Порядок вызова конструкторов при наследовании
*------------------------------------------------------------------------*/

class A
{
public:
	A()
	{
		cout << " Вызвался конструктор класса A" << endl;
	}
};


class B : public A
{
public:
	B()
	{
		cout << " Вызвался конструктор класса B" << endl;
	}
};


class C : public B
{
public:
	C()
	{
		cout << " Вызвался конструктор класса C" << endl;
	}
};


/***********************
		   MAIN
 ************************/
int main(int argc, char* argv[])
{
	setlocale(LC_ALL, "ru");

	cout << "\n____________________________________________________________\n" << endl;

	// A a;			// вызывается один констурктор: "A"

	// B b;			// вызываются два конструктора : "A" и "B"

	C value;		// вызываются все три конструктора: "A","B","C"

	cout << "\n____________________________________________________________\n" << endl;

	//=== END ===
	cout << endl;
	MyDate();
	system("pause");
	return 0;

}